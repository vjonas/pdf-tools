name: Build and Release (Modern)

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., v1.0.0)"
        required: true
        default: "v1.0.0"

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-latest
            platform: mac
          - os: windows-latest
            platform: win
          - os: ubuntu-latest
            platform: linux
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build Angular application
        run: npm run build:prod

      - name: Build Electron application
        run: npm run electron:dist -- --${{ matrix.platform }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.platform }}
          path: dist-electron/
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: find artifacts -type f -exec ls -la {} \;

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create release
          gh release create ${{ steps.version.outputs.version }} \
            --title "PDF Organiser ${{ steps.version.outputs.version }}" \
            --notes "## Changes in this release

          Please see the commit history for detailed changes.

          ## Downloads

          Choose the appropriate download for your operating system:

          - **macOS**: Download the \`.dmg\` file
          - **Windows**: Download the \`.exe\` file for your architecture
          - **Linux**: Download the \`.AppImage\` file

          ## Installation

          - **macOS**: Open the \`.dmg\` file and drag the app to your Applications folder
          - **Windows**: Run the \`.exe\` installer
          - **Linux**: Make the \`.AppImage\` file executable and run it" \
            artifacts/build-*/*
